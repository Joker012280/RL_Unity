//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Collections.Generic;
using System.Text;
using RosMessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Robotiq85
{
    public class GripperStat : Message
    {
        public const string RosMessageName = "robotiq_85_msgs/GripperStat";

        public Header header;
        public bool is_ready;
        public bool is_reset;
        public bool is_moving;
        public bool obj_detected;
        public byte fault_status;
        public float position;
        public float requested_position;
        public float current;

        public GripperStat()
        {
            this.header = new Header();
            this.is_ready = false;
            this.is_reset = false;
            this.is_moving = false;
            this.obj_detected = false;
            this.fault_status = 0;
            this.position = 0.0f;
            this.requested_position = 0.0f;
            this.current = 0.0f;
        }

        public GripperStat(Header header, bool is_ready, bool is_reset, bool is_moving, bool obj_detected, byte fault_status, float position, float requested_position, float current)
        {
            this.header = header;
            this.is_ready = is_ready;
            this.is_reset = is_reset;
            this.is_moving = is_moving;
            this.obj_detected = obj_detected;
            this.fault_status = fault_status;
            this.position = position;
            this.requested_position = requested_position;
            this.current = current;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.AddRange(header.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.is_ready));
            listOfSerializations.Add(BitConverter.GetBytes(this.is_reset));
            listOfSerializations.Add(BitConverter.GetBytes(this.is_moving));
            listOfSerializations.Add(BitConverter.GetBytes(this.obj_detected));
            listOfSerializations.Add(new[]{this.fault_status});
            listOfSerializations.Add(BitConverter.GetBytes(this.position));
            listOfSerializations.Add(BitConverter.GetBytes(this.requested_position));
            listOfSerializations.Add(BitConverter.GetBytes(this.current));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            offset = this.header.Deserialize(data, offset);
            this.is_ready = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.is_reset = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.is_moving = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.obj_detected = BitConverter.ToBoolean(data, offset);
            offset += 1;
            this.fault_status = data[offset];;
            offset += 1;
            this.position = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.requested_position = BitConverter.ToSingle(data, offset);
            offset += 4;
            this.current = BitConverter.ToSingle(data, offset);
            offset += 4;

            return offset;
        }

    }
}
